<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->
<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->
<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->
<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
    <metadata>
        <!-- == PACKAGE SPECIFIC SECTION == -->
        <!-- This section is about this package, although id and version have ties back to the software -->
        <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
        <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
        <id>keepass-plugin-haveibeenpwned</id>
        <!-- version should MATCH as closely as possible with the underlying software -->
        <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
        <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
        <version>1.3.6</version>
        <packageSourceUrl>https://github.com/pauby/ChocoPackages/tree/master/automatic/keepass-plugin-haveibeenpwned</packageSourceUrl>
        <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
        <owners>pauby</owners>
        <!-- ============================== -->
        <!-- == SOFTWARE SPECIFIC SECTION == -->
        <!-- This section is about the software itself -->
        <title>KeePass Plugin Have I Been Pwned</title>
        <authors>Andrew Schofield</authors>
        <!-- projectUrl is required for the community feed -->
        <projectUrl>https://github.com/andrew-schofield/keepass2-haveibeenpwned</projectUrl>
        <!-- <iconUrl></iconUrl> -->
        <copyright>(c) 2017-2019 Andrew Schofield</copyright>
        <!-- If there is a license Url available, it is is required for the community feed -->
        <licenseUrl>https://github.com/andrew-schofield/keepass2-haveibeenpwned/blob/master/LICENSE</licenseUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <projectSourceUrl>https://github.com/andrew-schofield/keepass2-haveibeenpwned</projectSourceUrl>
        <docsUrl>https://github.com/andrew-schofield/keepass2-haveibeenpwned/blob/master/README.md</docsUrl>
        <!-- <mailingListUrl></mailingListUrl> -->
        <bugTrackerUrl>https://github.com/andrew-schofield/keepass2-haveibeenpwned/issues</bugTrackerUrl>
        <tags>keepass plugin password hacked</tags>
        <summary>KeePass 2.x plugin to check all entries with URLs against various breach lists.</summary>
        <description>KeePass 2.x plugin to check all entries with URLs against various breach lists.

## Currently Supported Breach Lists

### Site/Domain based

* Have I Been Pwned (HIBP) - Checks the domains of any entries against the Have I Been Pwned? list curated by Troy Hunt.
* Cloudbleed vulnerability list - Checks the domains of any entries that appear in the Cloudbleed vulnerability list. This has potential to produce false positives due to the way this list was produced.

### Username based

* Have I Been Pwned (HIBP) - Checks the usernames of any entries against the Have I Been Pwned? list curated by (Troy Hunt)[https://www.troyhunt.com/]. This service requires you to register for an API key via https://haveibeenpwned.com/API/Key . The cost of API key is $3.50 per month (Credit card required).

### Password based

* Have I Been Pwned (HIBP) - Checks the passwords of any entries against the Have I Been Pwned? list curated by Troy Hunt.

This checker sends a small portion of the password hash to HIBP and then checks the full hash locally against the list of hashes returned by HIBP. This service does not send your password, nor enough of the hash to expose your password to HIBP.

**NOTE**: This is an automatically updated package. If you find it is out of date by more than a week, please contact the maintainer(s) and let them know the package is no longer updating correctly.
</description>
        <releaseNotes>https://github.com/andrew-schofield/keepass2-haveibeenpwned/releases</releaseNotes>
        <!-- =============================== -->
        <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
        <dependencies>
            <dependency id="keepass" version="2.41" />
        <!-- <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" /> -->
        <!-- <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" /> -->
        <!-- <dependency id="" /> -->
        <!-- <dependency id="chocolatey-uninstall.extension" /> -->
        </dependencies>
        <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->
        <!--<provides>NOT YET IMPLEMENTED</provides>-->
        <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
        <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    </metadata>
    <files>
        <!-- this section controls what actually gets packaged into the Chocolatey package -->
        <file src="tools\**" target="tools" />
        <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
    </files>
</package>