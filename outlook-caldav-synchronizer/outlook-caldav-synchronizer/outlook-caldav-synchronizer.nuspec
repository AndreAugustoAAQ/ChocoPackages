<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->
<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->
<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->

<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>outlook-caldav-synchronizer</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>2.15.1</version>
    <packageSourceUrl>https://sourceforge.net/projects/outlookcaldavsynchronizer/files</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>pauby</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Outlook Caldav Synchronizer (Portable)</title>
    <authors>Gerhard Zehetbauer,Alexander Nimmervoll</authors>
    <projectUrl>https://sourceforge.net/projects/outlookcaldavsynchronizer</projectUrl>
    <!--<iconUrl>http://cdn.rawgit.com/__MAINTAINER_REPO__/master/icons/outlook-caldav-synchronizer.png</iconUrl>-->
    <!-- copyright is usually years and software vendor, but not required for internal feeds -->
    <copyright>2017 Gerhard Zehetbauer and Alexander Nimmervoll</copyright>
    <licenseUrl>https://www.gnu.org/licenses/agpl-3.0.html</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!--<projectSourceUrl>Software Source Location - is the software source code available somewhere? Link to it with this</projectSourceUrl>-->
    <docsUrl>https://sourceforge.net/p/outlookcaldavsynchronizer/wiki</docsUrl>
    <mailingListUrl>https://sourceforge.net/projects/outlookcaldavsynchronizer/support</mailingListUrl>
    <bugTrackerUrl>https://sourceforge.net/projects/outlookcaldavsynchronizer/support</bugTrackerUrl>
    <tags>outlook caldav carddav gmail google sogo</tags>
    <summary>Outlook Plugin, which synchronizes events, tasks and contacts between Outlook and Google, SOGo, Horde or any other CalDAV or CardDAV server.</summary>
    <description>Free Outlook Plugin, which synchronizes events, tasks and contacts between Outlook and Google, SOGo, Horde or any other CalDAV or CardDAV server. Supported Outlook versions are 2016, 2013, 2010 and 2007.

This project was initially developed as a master thesis project at the University of Applied Sciences Technikum Wien, Software Engineering Degree program. Outlook CalDav Synchronizer is Free and Open-Source Software (FOSS), still you can support the project by donating on Sourceforge or directly within the About dialog of our Plugin.

Features:

* Free and open-source software (FOSS), the only free Outlook CalDav plugin (AGPL license)
* Tested CalDAV servers: SOGo, Google Calendar, Horde Kronolith, NextCloud, OwnCloud, SabreDAV, Synology NAS, GroupOffice, one.com , Yandex, OpenX-change, Posteo, Landmarks, Kolab, Zoho Calendar, GMX, Tine 2.0, Fruux, Mac OS X Server, iCloud, Mail.ru, Radicale, Cozy Cloud, Cyrus Imap 2.5
* Two-way-sync
* Modern WPF GUI
* Supporting OAuth2 for Google
* SSL/TLS support, support for self-signed certificates
* Manual proxy configuration support for NTLM or basic auth proxies
* Autodiscovery of calendars and adressbooks via well-known redirects or DNS SRV/TXT lookups
* Configurable sync range
* Sync multiple calendars per profile
* Sync reminders, categories, recurrences with exceptions, importance, transparency
* Sync organizer and attendees and own response status
* Task support
* CardDAV support to sync contacts (distribution lists planned)
* Google native Contacts API support with mapping of Google contact groups to Outlook categories.
* Google Tasklists support (sync via Google Task Api with Outlook task folders)
* Sync contact pictures, categories, notes and x509 certificates
* Manual or time-triggered sync
* Change-triggered sync
* Sync triggered by Outlook Send/Receive
* Category Filtering (sync CalDAV calendar to Outlook categories)
* Map CalDAV server colors to Outlook category colors
* Show reports of last sync runs and status
* Configurable system Tray Icon with notifications
* Bulk creation of multiple profiles
* Use server settings from Outlook IMAP/POP3 account profile
* Map Windows to standard IANA/Olson timezones
* Configurable mapping of Outlook custom properties
* Backport for WinXP and .Net 4.0 available at https://sourceforge.net/projects/outlookcaldavsynchronizerxp/ </description>
    <releaseNotes>https://sourceforge.net/projects/outlookcaldavsynchronizer/files</releaseNotes>
    <!-- =============================== -->  

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-uninstall.extension" />
    </dependencies>-->
      <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
